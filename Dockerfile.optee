# Dockerfile for OP-TEE Build Environment
# Based on instructions in GEMINI.md and official OP-TEE documentation.

FROM ubuntu:22.04

# 1. Install Prerequisites
# Prevent interactive prompts during installation
ARG DEBIAN_FRONTEND=noninteractive

# Set a specific user for the build process
ARG UID=1000
ARG GID=1000
RUN groupadd -g $GID optee && \
    useradd -m -u $UID -g $GID -s /bin/bash optee

# Install dependencies for OP-TEE build
# Source: https://optee.readthedocs.io/en/latest/building/prerequisites.html
RUN apt-get update && apt-get install -y \
    adb \
    acpica-tools \
    autoconf \
    automake \
    bc \
    bison \
    build-essential \
    ccache \
    cpio \
    cscope \
    curl \
    device-tree-compiler \
    expect \
    flex \
    ftp-upload \
    gdisk \
    git \
    libgnutls28-dev \
    libattr1-dev \
    libcap-ng-dev \
    libfdt-dev \
    libftdi-dev \
    libglib2.0-dev \
    libgmp3-dev \
    libhidapi-dev \
    libmpc-dev \
    libncurses5-dev \
    libpixman-1-dev \
    libssl-dev \
    libtool \
    make \
    mtools \
    netcat \
    
    python3-cryptography \
    python3-pip \
    python3-pyelftools \
    python3-serial \
    rsync \
    unzip \
    uuid-dev \
    wget \
    xdg-utils \
    xterm \
    xz-utils \
    zlib1g-dev && \
    rm -rf /var/lib/apt/lists/*

# Switch to the new user
ENV GIT_ASKPASS=/bin/true
RUN git config --global url."https://".insteadOf git://
USER optee
WORKDIR /home/optee

# 2. Clone Repositories
RUN git clone https://github.com/OP-TEE/build.git optee-build
RUN git clone https://github.com/OP-TEE/optee_os.git
RUN git clone https://github.com/OP-TEE/optee_client.git
RUN git clone https://github.com/linaro-swg/optee_examples.git

RUN git clone --branch optee https://github.com/linaro-swg/linux.git

# 3. Build Toolchains
RUN cd optee-build && make -j$(nproc) toolchains

# 4. Build QEMU Environment
RUN cd optee-build && make -j$(nproc) -f qemu_v8.mk all

# 5. Compile and Test an Example TA
RUN cd optee-build && make -j$(nproc) -f qemu_v8.mk ta-examples

# Set the default command to start a shell in the build environment
CMD ["/bin/bash"]
